<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>寂的博客</title>
        <link>http://localhost:1313/</link>
        <description>彼是莫得其偶，谓之道枢。枢始得其环中，以应无穷。</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>1621209357@qq.com (寂)</managingEditor>
            <webMaster>1621209357@qq.com (寂)</webMaster><lastBuildDate>Mon, 28 Apr 2025 17:50:34 &#43;0800</lastBuildDate>
            <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>美即是真，真即是美</title>
    <link>http://localhost:1313/2025-04-28-virtue/</link>
    <pubDate>Mon, 28 Apr 2025 17:50:34 &#43;0800</pubDate>
    <author>寂</author>
    <guid>http://localhost:1313/2025-04-28-virtue/</guid>
    <description><![CDATA[<!-- “美即是真，真即是美” 这就包括你们所知道、和该知道的一切。 - 济慈，《希腊古翁颂》 -->
<!-- 根据苏格拉底的说法，美德就是知识。根据亚里士多德的说法，苏格拉底的道德美德观与人类的共识背道而驰。 -->
<blockquote>
<p>当你说，看，那个真实的东西比词语更重要，然后他们说：“我要怎样摆脱词语，我要怎样沟通，如果我没有词语的话？” 你看到他们是怎么跑掉的吗？他们不关心那个东西本身，只关心词语。            - 克里希那穆提</p>]]></description>
</item>
<item>
    <title>从基础理论到工业应用，什么是虚拟化环境？</title>
    <link>http://localhost:1313/2025-04-26-virtualization/</link>
    <pubDate>Sat, 26 Apr 2025 20:50:34 &#43;0800</pubDate>
    <author>寂</author>
    <guid>http://localhost:1313/2025-04-26-virtualization/</guid>
    <description><![CDATA[<p>虚拟化环境是通过虚拟化技术在物理硬件上创建的模拟计算环境，允许在单一物理设备上运行多个操作系统或应用程序实例。本质上，虚拟化通过软件层（虚拟化管理程序或容器引擎）抽象硬件资源，实现资源隔离、灵活分配和高效利用。以下从基础理论、工业应用和技术发展展望三个维度展开详细分析。</p>]]></description>
</item>
<item>
    <title>Sui, 从认识到理解</title>
    <link>http://localhost:1313/2025-04-26-sui/</link>
    <pubDate>Sat, 26 Apr 2025 01:50:34 &#43;0800</pubDate>
    <author>寂</author>
    <guid>http://localhost:1313/2025-04-26-sui/</guid>
    <description><![CDATA[<blockquote>
<p>不闻不若闻之，闻之不若见之，见之不若知之，知之不若行之。    -《荀子·儒效》</p></blockquote>
<h2 id="rust-所有权系统">Rust: 所有权系统</h2>
<h3 id="属和种差">属和种差</h3>
<p>Rust是一种系统级编程语言，它通过<strong>所有权系统</strong>和类型安全设计，实现了内存安全与高性能的平衡，无需垃圾回收即可防止内存错误和数据竞争。</p>]]></description>
</item>
<item>
    <title>弱 — 历史的动力</title>
    <link>http://localhost:1313/2025-04-20-weak/</link>
    <pubDate>Sun, 20 Apr 2025 21:50:34 &#43;0800</pubDate>
    <author>寂</author>
    <guid>http://localhost:1313/2025-04-20-weak/</guid>
    <description><![CDATA[<p>拉图尔：我有理由保持怀疑，因为您对智者的描述会导致一种完全孤立、孤芳自赏、回归象牙塔的形象。谈论道德总是让人只关注自我，这就没办法再大幅往前走。</p>]]></description>
</item>
<item>
    <title>心智模式 — 游戏规则说明书</title>
    <link>http://localhost:1313/2025-04-11-mental-models/</link>
    <pubDate>Fri, 11 Apr 2025 13:50:34 &#43;0800</pubDate>
    <author>寂</author>
    <guid>http://localhost:1313/2025-04-11-mental-models/</guid>
    <description><![CDATA[<!-- 一花一世界，一叶一如来。  -《华严经》 -->
<blockquote>
<p>如果你想成为一名优秀的思考者，你必须培养一种能够跨越管辖界限的头脑。你不必了解所有内容。只需吸收所有这些学科中最好的大创意。而且这并不难做到。  — 查理·芒格</p>]]></description>
</item>
<item>
    <title>从符号到括号，什么是S-表达式？</title>
    <link>http://localhost:1313/2025-03-26-symbolic-expression/</link>
    <pubDate>Wed, 26 Mar 2025 17:50:34 &#43;0800</pubDate>
    <author>寂</author>
    <guid>http://localhost:1313/2025-03-26-symbolic-expression/</guid>
    <description><![CDATA[<p>S-表达式（S-expression，全称Symbolic Expression，符号表达式）是一种由约翰·麦卡锡（John McCarthy）在设计Lisp编程语言时引入的数据表示方法。它以简洁的语法和强大的表达能力著称，不仅是Lisp及其变种（如Scheme、Common Lisp）的核心，还广泛应用于符号计算、人工智能和数据结构的表示。S-表达式的核心思想是通过符号和括号构建一种既能表示数据又能表示程序的结构，具有“代码即数据”的特性。</p>]]></description>
</item>
<item>
    <title>从函数到副作用 - React 的时空观</title>
    <link>http://localhost:1313/2025-03-21-react/</link>
    <pubDate>Fri, 21 Mar 2025 11:50:34 &#43;0800</pubDate>
    <author>寂</author>
    <guid>http://localhost:1313/2025-03-21-react/</guid>
    <description><![CDATA[<p>让我们从计算机科学基础到框架设计哲学，逐层解剖 React 的核心思想：</p>
<h2 id="一数学根基函数式编程的觉醒">一、数学根基：函数式编程的觉醒</h2>
<p>React 将 UI 抽象为状态函数的哲学，源于对计算机图形学与函数式编程的深刻融合：</p>
<h3 id="1-命令式-dom-操作的致命缺陷">1. 命令式 DOM 操作的致命缺陷</h3>
<p><strong>矛盾本质</strong>：直接操作DOM导致状态与视图耦合，违反单向数据流原则</p>]]></description>
</item>
<item>
    <title>从栈到堆，什么是 JavaScript?</title>
    <link>http://localhost:1313/2025-03-21-js/</link>
    <pubDate>Fri, 21 Mar 2025 10:50:34 &#43;0800</pubDate>
    <author>寂</author>
    <guid>http://localhost:1313/2025-03-21-js/</guid>
    <description><![CDATA[<p>JavaScript 是一种功能强大且灵活的编程语言，广泛应用于网页开发、服务器端开发等领域。要深入理解 JavaScript，我们可以从变量在计算机中的数据存储开始，逐步探讨其运行机制、最新语法以及设计理念。以下是对这些方面的逐层剖析。</p>]]></description>
</item>
<item>
    <title>从链下到链上，什么是 DApp？</title>
    <link>http://localhost:1313/2025-03-20-dapp/</link>
    <pubDate>Thu, 20 Mar 2025 17:50:34 &#43;0800</pubDate>
    <author>寂</author>
    <guid>http://localhost:1313/2025-03-20-dapp/</guid>
    <description><![CDATA[<!-- 从链下到链上，什么是DApp？——以典型DeFi借贷平台为例 -->
<p><figure><a class="lightgallery" href="/img/onchain-mcp.jpg" title="https://github.com/bankless/onchain-mcp" data-thumbnail="/img/onchain-mcp.jpg" data-sub-html="<h2>Bankless Onchain MCP Server</h2><p>https://github.com/bankless/onchain-mcp</p>">
        
    </a><figcaption class="image-caption">Bankless Onchain MCP Server</figcaption>
    </figure></p>
<p>DApp（去中心化应用程序，Decentralized Application）是一种运行在区块链网络上的应用程序。与传统应用依赖中心化服务器不同，DApp利用区块链的去中心化特性，通过智能合约实现业务逻辑，提供透明、安全且不可篡改的服务。DApp通常由两部分组成：</p>]]></description>
</item>
<item>
    <title>从启动浏览器到打开网页，发生了什么？</title>
    <link>http://localhost:1313/2025-03-17-browser/</link>
    <pubDate>Mon, 17 Mar 2025 17:50:34 &#43;0800</pubDate>
    <author>寂</author>
    <guid>http://localhost:1313/2025-03-17-browser/</guid>
    <description><![CDATA[<p>从计算机科学的角度来看，从启动浏览器到输入网址并打开网页的全过程是一个复杂且多层次的协作，涉及网络通信、浏览器架构、JavaScript 执行机制等多个方面。现代浏览器（如Chrome、Firefox）采用了多进程架构，并结合单线程的 JavaScript 运行机制，通过事件循环和专用 Worker API 实现高效的任务处理和页面渲染。以下将详细描述这一过程，并突出 JavaScript 的单线程特性及其在浏览器中的运作方式。</p>]]></description>
</item>
</channel>
</rss>
