<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>AST - 标签 - 浮槎的博客</title>
        <link>http://example.org/tags/ast/</link>
        <description>AST - 标签 - 浮槎的博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 21 Jan 2021 16:50:34 &#43;0800</lastBuildDate><atom:link href="http://example.org/tags/ast/" rel="self" type="application/rss+xml" /><item>
    <title>[译]元编程</title>
    <link>http://example.org/2021-01-21-metaprogram/</link>
    <pubDate>Thu, 21 Jan 2021 16:50:34 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/2021-01-21-metaprogram/</guid>
    <description><![CDATA[本文翻译自 stereobooster 的博客文章：metaprogramming，少量删改。完整内容参阅原文。 什么是元编程 不好的是，没有一个达成共识的单一定义。让我们]]></description>
</item><item>
    <title>实现 λ 演算解释器</title>
    <link>http://example.org/2020-12-13-%CE%BB-interpreter/</link>
    <pubDate>Sun, 13 Dec 2020 09:50:34 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/2020-12-13-%CE%BB-interpreter/</guid>
    <description><![CDATA[如果你没有听说过 λ 演算，可以阅读我的这篇文章。如果你没有编译原理相关知识，可以阅读我的这篇文章。首先介绍调度场算法，后面的实现中会用到。 调度]]></description>
</item><item>
    <title>程序解释与编译</title>
    <link>http://example.org/2020-12-10-lex-parse/</link>
    <pubDate>Thu, 10 Dec 2020 09:50:34 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/2020-12-10-lex-parse/</guid>
    <description><![CDATA[程序的解释和编译通常需要经过词法分析，语法分析和生成抽象语法树等阶段。 前置知识 算术表达式根据运算符所在的位置可以分为三种表示方法： 前缀表达式]]></description>
</item><item>
    <title>入门 AST 抽象语法树</title>
    <link>http://example.org/2020-08-23-ast/</link>
    <pubDate>Sun, 23 Aug 2020 00:30:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/2020-08-23-ast/</guid>
    <description><![CDATA[如果你想了解 Javascript 的编译原理，那么你就得了解 AST(Abstract Syntax Tree)，目前前端常用的一些插件或者工具，比如 JS 转译、代码压缩、CSS 预处理器、ESLint、]]></description>
</item></channel>
</rss>
